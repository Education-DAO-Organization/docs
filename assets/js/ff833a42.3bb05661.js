"use strict";(self.webpackChunkeducation_docs=self.webpackChunkeducation_docs||[]).push([[7818],{5393:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(4848),a=n(8453);const r={},c="Factory Contracts",s={id:"courses/blockchain-developer-bootcamp/S03-smart-contracts/M2-solidity/L8-factory-contracts/index",title:"Factory Contracts",description:"Solidity is a contract-oriented programming language, which adopts many of the design principles of object-oriented programming languages.",source:"@site/docs/courses/blockchain-developer-bootcamp/S03-smart-contracts/M2-solidity/L8-factory-contracts/index.md",sourceDirName:"courses/blockchain-developer-bootcamp/S03-smart-contracts/M2-solidity/L8-factory-contracts",slug:"/courses/blockchain-developer-bootcamp/S03-smart-contracts/M2-solidity/L8-factory-contracts/",permalink:"/educationdao.xyz/docs/courses/blockchain-developer-bootcamp/S03-smart-contracts/M2-solidity/L8-factory-contracts/",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"oliver renwick",lastUpdatedAt:1721055769e3,frontMatter:{},sidebar:"docSidebar",previous:{title:"index",permalink:"/educationdao.xyz/docs/courses/blockchain-developer-bootcamp/S03-smart-contracts/M2-solidity/L7-events-and-logs/"},next:{title:"Currently on LMS",permalink:"/educationdao.xyz/docs/courses/blockchain-developer-bootcamp/S03-smart-contracts/M2-solidity/L9-solidity-by-example/"}},i={},l=[{value:"Token Factory Example",id:"token-factory-example",level:2},{value:"Token Contract",id:"token-contract",level:3},{value:"Token Factory",id:"token-factory",level:2},{value:"Additional Resources:",id:"additional-resources",level:2}];function d(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"factory-contracts",children:"Factory Contracts"}),"\n",(0,o.jsx)(t.p,{children:"Solidity is a contract-oriented programming language, which adopts many of the design principles of object-oriented programming languages."}),"\n",(0,o.jsx)(t.p,{children:"We can implement a factory design pattern that will ensure that every contract deployed using the factory adheres to a certain standard."}),"\n",(0,o.jsx)(t.h2,{id:"token-factory-example",children:"Token Factory Example"}),"\n",(0,o.jsx)(t.p,{children:"Let's look at what a standard Ethereum token implementation might look like."}),"\n",(0,o.jsx)(t.p,{children:"Tokens are a great case for a factory pattern because we want all of the token implementations to be compatible and convertible with one another."}),"\n",(0,o.jsx)(t.p,{children:"Defining a standard interface that all tokens should implement can ease development and benefit the entire ecosystem."}),"\n",(0,o.jsx)(t.h3,{id:"token-contract",children:"Token Contract"}),"\n",(0,o.jsx)(t.p,{children:"Here is the start of a basic Token contract."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://files.cdn.thinkific.com/file_uploads/205430/images/c35/834/9da/1595718641286.jpg",alt:"Screenshot-from-2019-04-24-14-39-23"})}),"\n",(0,o.jsx)(t.p,{children:"\xa0You can imagine that we might want to store more data in our Token contract. This contract does not have functions implemented yet."}),"\n",(0,o.jsx)(t.p,{children:"As we add functions and the contract increases in complexity, it will be more difficult to ensure that every Token contract is implementing the same interface and is bug-free."}),"\n",(0,o.jsx)(t.h2,{id:"token-factory",children:"Token Factory"}),"\n",(0,o.jsx)(t.p,{children:"Deploying all of these standard compliant tokens through a token factory will abstract away many of the implementation details."}),"\n",(0,o.jsxs)(t.p,{children:["We can use the ",(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Factory_method_pattern",children:"factory design pattern"})," in Solidity."]}),"\n",(0,o.jsxs)(t.p,{children:["In the factory contract, we need to make the standardized token contract available by ",(0,o.jsx)(t.em,{children:"importing"})," it."]}),"\n",(0,o.jsx)(t.p,{children:"When we want to create a new token, we can pass the required constructor arguments for the Token contract into the token factory create token function."}),"\n",(0,o.jsx)(t.p,{children:"In the create token function we specify that we are creating a new Token contract with the new keyword."}),"\n",(0,o.jsx)(t.p,{children:"The token contract creation will return the address of the new contract. We know that this contract is of type token and we specify the type of the newToken variable."}),"\n",(0,o.jsx)(t.p,{children:"We can store the creator of the new token, and transfer all of the newly minted tokens to the caller."}),"\n",(0,o.jsx)(t.p,{children:"The function returns the address of the new token contract. This new contract has all of the state variables and functions that we specified in the token contract."}),"\n",(0,o.jsx)(t.p,{children:"This is a useful design pattern that has numerous potential use cases."}),"\n",(0,o.jsxs)(t.p,{children:["The ConsenSys GitHub contains an ",(0,o.jsx)(t.a,{href:"https://github.com/ConsenSys/Tokens/blob/master/contracts/eip20/EIP20.sol",children:"implementation of the EIP20 interface"}),", as well as an ",(0,o.jsx)(t.a,{href:"https://github.com/ConsenSys/Tokens/blob/master/contracts/eip20/EIP20Factory.sol",children:"EIP20 token factory."})]}),"\n",(0,o.jsx)(t.h2,{id:"additional-resources",children:"Additional Resources:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://ethereum.org/en/developers/tutorials/interact-with-other-contracts-from-solidity/",children:"Article: Manage several contracts with factories"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var o=n(6540);const a={},r=o.createContext(a);function c(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);