"use strict";(self.webpackChunkeducation_docs=self.webpackChunkeducation_docs||[]).push([[3759],{2834:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=o(4848),s=o(8453);const r={},i="Testing, 1, 2, 3",a={id:"courses/blockchain-developer-bootcamp/S04-developer-tooling/M4-truffle-deep-dive/L1-truffle-tests/index",title:"Testing, 1, 2, 3",description:"A comprehensive suite of tests adds robustness to your code as it evolves, and Truffle provides an automated testing framework that makes adding this to your project a breeze.",source:"@site/docs/courses/blockchain-developer-bootcamp/S04-developer-tooling/M4-truffle-deep-dive/L1-truffle-tests/index.md",sourceDirName:"courses/blockchain-developer-bootcamp/S04-developer-tooling/M4-truffle-deep-dive/L1-truffle-tests",slug:"/courses/blockchain-developer-bootcamp/S04-developer-tooling/M4-truffle-deep-dive/L1-truffle-tests/",permalink:"/educationdao.xyz/docs/courses/blockchain-developer-bootcamp/S04-developer-tooling/M4-truffle-deep-dive/L1-truffle-tests/",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"oliver renwick",lastUpdatedAt:1721061896e3,frontMatter:{},sidebar:"docSidebar",previous:{title:"index",permalink:"/educationdao.xyz/docs/courses/blockchain-developer-bootcamp/S04-developer-tooling/M3-infura/L2/"},next:{title:"index",permalink:"/educationdao.xyz/docs/courses/blockchain-developer-bootcamp/S04-developer-tooling/M4-truffle-deep-dive/L2-debug-config-forking/"}},l={},c=[];function d(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"testing-1-2-3",children:"Testing, 1, 2, 3"}),"\n",(0,n.jsx)(t.p,{children:"A comprehensive suite of tests adds robustness to your code as it evolves, and Truffle provides an automated testing framework that makes adding this to your project a breeze."}),"\n",(0,n.jsx)(t.p,{children:"In the following examples, we\u2019ll be writing our tests in JavaScript, although Truffle also supports Solidity based tests too. Check out the following for when you might use one over the other."}),"\n",(0,n.jsx)(t.p,{children:"All your tests live in a dedicated tests directory, which is automatically created if you used truffle init to initialize your project, although you can of course create one after the fact."}),"\n",(0,n.jsx)(t.p,{children:"Go back to the SimpleStorage file directory we created in the previous lesson, \u201cIntro to Truffle -- Part II\u201d. To create your first test for SimpleStorage run the following:"}),"\n",(0,n.jsx)(t.p,{children:"truffle create test SimpleStorage"}),"\n",(0,n.jsx)(t.p,{children:"As with the earlier create command this creates a simple scaffold which includes a reference to the actual underlying contract artifact."}),"\n",(0,n.jsx)(t.p,{children:"Following this you can simply run the following to run the test suite."}),"\n",(0,n.jsx)(t.p,{children:"truffle test"}),"\n",(0,n.jsxs)(t.p,{children:["If there is no ",(0,n.jsx)(t.code,{children:"development"})," network specified in ",(0,n.jsx)(t.code,{children:"truffle-config.js"}),", the testing framework will temporarily spin up it\u2019s own Ganache with which to run the tests against (which it subsequently tears down). This ensures it doesn\u2019t pollute any existing ganache instances you might have running."]}),"\n",(0,n.jsx)(t.p,{children:"Let\u2019s try running it again with a more meaningful test. Feel free to copy and paste the following into your own test and try running truffle test again."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-solidity",children:'    contract("SimpleStorage", function (/* accounts */) {\n        it("should assert true", async function () {\n        const simpleStorage = await SimpleStorage.deployed();\n        await simpleStorage.set(42);\n    \n    return assert.equal(\n      await simpleStorage.get(),\n      42\n        );\n     });\n    });\n'})}),"\n",(0,n.jsx)(t.p,{children:"If all is going well, everything should pass again and you\u2019ll see similar output to the following:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-solidity",children:"    Contract: SimpleStorage\n    \u2713 should assert true (132ms)\n    1 passing (167ms)\n"})}),"\n",(0,n.jsx)(t.p,{children:"As can be inferred from the above example, tests are typically written using the AAA (Arrange, Act, Assert) pattern. In addition, you can access the accounts array and access to the web3 library."}),"\n",(0,n.jsxs)(t.p,{children:["More detail can be found on tests ",(0,n.jsx)(t.a,{href:"https://www.trufflesuite.com/docs/truffle/testing/testing-your-contracts",children:"here"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>a});var n=o(6540);const s={},r=n.createContext(s);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);